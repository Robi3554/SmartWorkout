@page "/addworkout"
@using SmartWorkout.DBAccess.Entities
@using SmartWorkout.DataAccess.Repositories

@inject IGenericRepository<User> repoU;
@* @inject IGenericRepository<Workout> repoW; *@
@inject NavigationManager Navigation;

<h3>AddWorkout</h3>

<EditForm Model="newWorkout" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <select @bind="selectedUserId" class="custom-dropdown">
        <option value="">Select a user...</option>
        @foreach (var user in selectedUsers)
        {
            <option value="@user.Id">(@user.Id) @user.Name @user.Surname</option>
        }
    </select>
    <div class="mb-3 w-50">
        <label for="duration">Workout Duration</label>
        <InputNumber id="duration" class="form-control" @bind-Value="newWorkout.Duration" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary" @onclick="() => GoToUpdate(selectedUserId)">Add Workout</button>
    </div>
</EditForm>

@code {
    private Workout newWorkout = new Workout();

    private List<User> selectedUsers = new List<User>();

    private int selectedUserId;

    protected override async Task OnInitializedAsync()
    {
        var col = await repoU.GetAllAsync();
        selectedUsers = col.ToList();
    }

    private async Task Submit()
    {
        
    }

    private void GoToUpdate(int id)
    {
        Navigation.NavigateTo($"/showid/{id}");
    }
}
