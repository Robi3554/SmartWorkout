@page "/selecttrainer/{userID:int}"
@using SmartWorkout.DBAccess.Entities
@using SmartWorkout.DataAccess.Repositories

@inject IGenericRepository<User> repo;
@inject NavigationManager Navigation;

<h3>Select Trainer</h3>

@if (user != null)
{
    <EditForm Model="@user" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Name:</label>
            <p>@($"{user.Name} {user.Surname}")</p>
        </div>

        <div class="mb-3">
            <label for="trainerId">Select Trainer:</label>
            <select id="trainerId" class="form-control" @bind="@user.TrainerId">
                <option value="">-- Select a Trainer --</option>
                @foreach (var trainer in trainers.Where(u => u.Role == "Trainer"))
                {
                    <option value="@trainer.Id">@($"{trainer.Name} {trainer.Surname}")</option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Assign Trainer</button>
    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {
    private User user;
    private List<User> trainers;

    [Parameter]
    public int userID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var col = await repo.GetAllAsync();
        trainers = col.ToList();

        user = await repo.GetByIdAsync(userID) ?? new User();
    }

    private async Task Submit()
    {
        await repo.UpdateAsync(user);
        Navigation.NavigateTo("/users");
    }
}
