@page "/music"
@using System.IO;
@inject IJSRuntime JSRuntime

<h3>Music</h3>

<div class="row">
    <div class="col-md-3">
        <button class="btn btn-primary" @onclick="LoadAudioFiles">Load Audio Files</button>
        <hr />
        <h2>Files List</h2>
        <hr />
        @if (audioFilesList != null && audioFilesList.Count > 0)
        {
            int nSL = 0;
            @foreach (string file in audioFilesList)
            {
                nSL++;
                <br />
                <span>@nSL.</span>
                <span @onclick="@(e => PlayAudio(file))" style="cursor:pointer;text-decoration:underline;color:blue;">@file</span>
            }
        }
    </div>
    <div class="col-md-9">
        <h1>Now Playing: @audioName</h1>
        <div>
            <audio id="audioPlayer" controls="controls" src="@audioSrc" style="width:100%;" @onended="@(async () => await PlayRandomAudio())">
                Your browser does not support the audio element.
            </audio>
        </div>
    </div>
</div>

@code {
    private string audioSrc = "";
    private string audioName = "N/A";

    private bool isPressed = false;

    private List<string> audioFilesList = new List<string>();
    private string path = $"{Directory.GetCurrentDirectory()}{@"\wwwroot\audio"}";

    public void LoadAudioFiles()
    {
        if (!isPressed)
        {
            var files = Directory.GetFiles(path);
            isPressed = true;
            foreach (var file in files)
            {
                audioFilesList.Add(Path.GetFileName(file));
            }
        }
    }

    public void PlayAudio(string fileName)
    {
        audioName = fileName.Split('.')[0];
        audioSrc = "/audio/" + fileName;
        StateHasChanged();
        InvokeAsync(() => JSRuntime.InvokeVoidAsync("playAudio"));
    }

    public async Task PlayRandomAudio()
    {
        if (audioFilesList != null && audioFilesList.Count > 0)
        {
            var random = new Random();
            int index = random.Next(audioFilesList.Count);
            PlayAudio(audioFilesList[index]);
            await Task.Delay(100); // Slight delay to ensure the audio source updates
            await JSRuntime.InvokeVoidAsync("playAudio");
        }
    }
}

<script>
    window.playAudio = () => {
        var audioPlayer = document.getElementById('audioPlayer');
        if (audioPlayer) {
            audioPlayer.load();
            audioPlayer.play();
        }
    };
</script>
