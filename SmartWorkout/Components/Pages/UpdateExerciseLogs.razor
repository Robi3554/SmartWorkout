@page "/updateexerciselog/{workoutID:int}/{exerciseID:int}/{userID:int}"
@using SmartWorkout.DBAccess.Entities
@using SmartWorkout.DataAccess.Repositories

@inject IGenericRepository<Exercise> repoE
@inject IGenericRepository<ExerciseLog> repoEl
@inject IGenericRepository<Workout> repoW
@inject NavigationManager Navigation

<h3>UpdateExerciseLogs</h3>

<EditForm Model="modExerciseLog" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3 w-50">
        <label for="workoutId">Workout ID</label>
        <InputNumber id="workoutId" class="form-control" readonly @bind-Value="modExerciseLog.WorkoutId" />
    </div>

    <div class="mb-3 w-50">
        <label for="exerciseId">Exercise</label>
        <InputSelect id="exerciseId" class="custom-select" @bind-Value="modExerciseLog.ExerciseId">
            <option value="">Select an exercise...</option>
            @foreach (var exercise in exercises)
            {
                <option value="@exercise.Id">(@exercise.Id) @exercise.Name</option>
            }
        </InputSelect>
    </div>

    <div class="mb-3 w-50">
        <label for="sets">Sets</label>
        <InputNumber id="sets" class="form-control" @bind-Value="modExerciseLog.Sets" />
    </div>

    <div class="mb-3 w-50">
        <label for="reps">Reps</label>
        <InputNumber id="reps" class="form-control" @bind-Value="modExerciseLog.Reps" />
    </div>

    <div class="mb-3 w-50">
        <label for="reps">Weight</label>
        <InputNumber id="weight" class="form-control" @bind-Value="modExerciseLog.Weight" />
    </div>

    <div class="mb-3 w-50">
        <label for="reps">Duration</label>
        <InputNumber id="duration" class="form-control" @bind-Value="modExerciseLog.Duration" />
    </div>

    <div class="mb-3 w-50">
        <label for="reps">Distance</label>
        <InputNumber id="distance" class="form-control" @bind-Value="modExerciseLog.Distance" />
    </div>

    <div>
        <button type="submit" class="btn btn-primary">Update Exercise Log</button>
    </div>
</EditForm>

@code {
    private ExerciseLog modExerciseLog;

    private Workout workout = new Workout();

    private List<Exercise> exercises = new List<Exercise>();

    [Parameter]
    public int workoutID { get; set; }

    [Parameter]
    public int userID { get; set; }

    [Parameter]
    public int exerciseID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadExerciseLog();
        await LoadExercises();
    }

    private async Task LoadExerciseLog()
    {
        try
        {
            modExerciseLog = await repoEl.GetByIdAsyncExec(workoutID, exerciseID) ?? new ExerciseLog();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading exercise log: {ex.Message}");
        }
    }

    private async Task LoadExercises()
    {
        try
        {
            var col = await repoE.GetAllAsync();
            exercises = col.ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading exercises: {ex.Message}");
        }
    }

    private async Task Submit()
    {
        try
        {
            await repoEl.UpdateAsync(modExerciseLog);
            Navigation.NavigateTo($"/workouts/{userID}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating exercise log: {ex.Message}");
        }
    }
}
